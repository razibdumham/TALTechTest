// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremiumCalculation.Infrastructure;

namespace PremiumCalculation.Infrastructure.Migrations
{
    [DbContext(typeof(PremiumCalculationDBContext))]
    partial class PremiumCalculationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PremiumCalculation.Domain.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OccupationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("Occupations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OccupationTitle = "Cleaner",
                            RatingId = 3
                        },
                        new
                        {
                            Id = 2,
                            OccupationTitle = "Doctor",
                            RatingId = 1
                        },
                        new
                        {
                            Id = 3,
                            OccupationTitle = "Author",
                            RatingId = 2
                        },
                        new
                        {
                            Id = 4,
                            OccupationTitle = "Farmer",
                            RatingId = 4
                        },
                        new
                        {
                            Id = 5,
                            OccupationTitle = "Mechanic",
                            RatingId = 4
                        },
                        new
                        {
                            Id = 6,
                            OccupationTitle = "Florist",
                            RatingId = 3
                        });
                });

            modelBuilder.Entity("PremiumCalculation.Domain.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RatingTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Factor = 1m,
                            RatingTitle = "Professional"
                        },
                        new
                        {
                            Id = 2,
                            Factor = 1.25m,
                            RatingTitle = "White Collar"
                        },
                        new
                        {
                            Id = 3,
                            Factor = 1.50m,
                            RatingTitle = "Light Manual"
                        },
                        new
                        {
                            Id = 4,
                            Factor = 1.75m,
                            RatingTitle = "Heavy Manual"
                        });
                });

            modelBuilder.Entity("PremiumCalculation.Domain.Occupation", b =>
                {
                    b.HasOne("PremiumCalculation.Domain.Rating", "Rating")
                        .WithMany("Occupations")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("PremiumCalculation.Domain.Rating", b =>
                {
                    b.Navigation("Occupations");
                });
#pragma warning restore 612, 618
        }
    }
}
